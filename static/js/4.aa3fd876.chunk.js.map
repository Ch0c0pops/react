{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogsItem","props","Path","id","className","classes","dialog","active","to","name","Message","message","maxLength15","maxLengthCreator","ReduxNewMessageForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","Dialogs","state","dialogsPage","dialogsElements","dialogsData","map","key","messagesElements","messagesData","isAuth","dialogs","dialogsItems","messages","data","sendMessage","myNewMessage","compose","connect","dispatch","sendMessageActionCreator","reset","withAuthRedirect"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCapMC,EAVK,SAACC,GACjB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,QAC3C,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCCvBC,EANC,SAACT,GACb,OAAO,yBAAKG,UAAWC,IAAQM,SAAUV,EAAMU,U,yCCM7CC,EAAcC,YAAiB,IAa/BC,EAAsBC,YAAU,CAACC,KAAM,cAAjBD,EAZL,SAACd,GACpB,OACI,0BAAMgB,SAAUhB,EAAMiB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUZ,KAAK,eAAea,SAAU,CAACC,IAAUX,MAEzE,6BACI,qDAiCDY,EA1BC,SAACvB,GACb,IAAIwB,EAAQxB,EAAMyB,YACdC,EAAkBF,EAAMG,YAAYC,KACpC,SAAAvB,GAAM,OAAI,kBAAC,EAAD,CAAaG,KAAMH,EAAOG,KAAMqB,IAAKxB,EAAOH,GAAIA,GAAIG,EAAOH,QAErE4B,EAAmBN,EAAMO,aAAaH,KAAI,SAAAlB,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAASmB,IAAKnB,EAAQR,QAKzG,OAAKF,EAAMgC,OAIP,yBAAK7B,UAAWC,IAAQ6B,SACpB,yBAAK9B,UAAWC,IAAQ8B,cACnBR,GAEL,yBAAKvB,UAAWC,IAAQ+B,UACpB,6BAAML,GACN,kBAACjB,EAAD,CAAqBG,SAdR,SAACoB,GACtBpC,EAAMqC,YAAYD,EAAKE,mBAIhB,kBAAC,IAAD,CAAU/B,GAAI,Y,gCCbdgC,sBAAQC,aAfD,SAAChB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACgB,GACtB,MAAO,CACHJ,YAAa,SAACD,GACVK,EAASC,YAAyBN,IAClCK,EAASE,YAAM,oBAKyCC,IAArDL,CAAwEhB","file":"static/js/4.aa3fd876.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__32ZQ4\",\"dialogsItems\":\"Dialogs_dialogsItems__3-DFV\",\"active\":\"Dialogs_active__3Y8wP\",\"dialog\":\"Dialogs_dialog__3cjO6\",\"messages\":\"Dialogs_messages__3onTv\",\"message\":\"Dialogs_message__YU5GR\"};","import React from 'react' ;\r\nimport classes from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogsItem = (props) => {\r\n    let Path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink to={Path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogsItem;","import React from 'react' ;\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={classes.message}>{props.message}</div>\r\n}\r\n\r\n\r\n\r\nexport default Message;","import React from 'react' ;\r\nimport classes from './Dialogs.module.css';\r\nimport DialogsItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../Common/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../Utilits/Validators\";\r\n\r\n\r\nconst maxLength15 = maxLengthCreator(15);\r\nconst newMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name='myNewMessage' validate={[required, maxLength15]}></Field>\r\n            </div>\r\n            <div>\r\n                <button>send message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\nconst ReduxNewMessageForm = reduxForm({form: 'newMessage'})(newMessageForm);\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogsData.map(\r\n        dialog => <DialogsItem name={dialog.name} key={dialog.id} id={dialog.id}/>\r\n    );\r\n    let messagesElements = state.messagesData.map(message => <Message message={message.message} key={message.id}/>);\r\n    let onSendMessageClick = (data) => {\r\n        props.sendMessage(data.myNewMessage);\r\n    };\r\n\r\n    if (!props.isAuth) {\r\n        return <Redirect to={'/Login'}/>\r\n    }\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div>{messagesElements}</div>\r\n                <ReduxNewMessageForm onSubmit={onSendMessageClick}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n","import React from 'react' ;\r\nimport {sendMessageActionCreator} from \"../Redux/DialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {reset} from 'redux-form';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (data) => {\r\n            dispatch(sendMessageActionCreator(data));\r\n            dispatch(reset('newMessage'));\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps),withAuthRedirect )(Dialogs);\r\n\r\n"],"sourceRoot":""}