{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/myPosts/MyPosts.module.css","components/Profile/myPosts/Post/Post.module.css","components/Profile/ProfileInfo/StatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/myPosts/Post/Post.jsx","components/Profile/myPosts/MyPosts.jsx","components/Profile/myPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onBlur","updateStatus","onChange","e","currentTarget","value","autoFocus","ProfileInfo","profile","src","className","classes","DescriptionBlock","photos","large","Loader","Post","content","message","likeCount","maxLength10","maxLengthCreator","ReduxNewPostForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","MyPosts","React","memo","console","log","postsElements","postsData","map","post","likes","postsBlock","data","addPost","newPost","myPosts","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","reset","Profile","ProfileContainer","userId","this","match","params","history","push","getUserProfileThunkCreator","getUserStatus","Component","compose","auth","id","withRouter"],"mappings":"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","file":"static/js/3.07ebd8b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"DescriptionBlock\":\"ProfileInfo_DescriptionBlock__25z7a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1IZrX\",\"myPosts\":\"MyPosts_myPosts__JOMuP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__3JaKd\",\"dork\":\"Post_dork__2WVW8\"};","import React, {useState, useEffect} from 'react';\r\n\r\n\r\n\r\nconst  ProfileStatusWithHooks =(props)=> {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=>{setStatus(props.status)},[props.status]);\r\n\r\n    const activateEditMode = () => {\r\n       setEditMode(true)\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status);\r\n    };\r\n\r\n   const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n        return (<div>\r\n                {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || '----'}</span>\r\n                </div>}\r\n                {editMode &&\r\n                <div>\r\n                    <input onBlur={deactivateEditMode} onChange={onStatusChange} autoFocus={true}\r\n                    value={status}/>\r\n                </div>}\r\n            </div>\r\n        )\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from './../ProfileInfo/ProfileInfo.module.css';\r\nimport Loader from \"../../../Common/Loader\";\r\nimport ProfileStatusWithHooks from \"./StatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, ...props}) => {\r\n    if (!profile) {\r\n        return <Loader/>\r\n    }\r\n    return <div>\r\n        <div>\r\n            <img src='https://avatars.mds.yandex.net/get-pdb/2388792/2de82027-9ab6-4382-8a6a-6b54cef4f00b/s800'></img>\r\n        </div>\r\n        <div className={classes.DescriptionBlock}>\r\n            <img src={profile.photos.large}></img>\r\n\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return <div className={classes.content}>\r\n\r\n    <div className={classes.Post}>\r\n      <img src='https://klike.net/uploads/posts/2019-03/1551511784_4.jpg'></img>\r\n      {props.message}\r\n      \r\n      <div>\r\n        <span>Likes </span>{props.likeCount}\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n  \r\nexport default Post; ","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../Utilits/Validators\";\r\nimport {Textarea} from \"../../../Common/FormControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst newPostForm = (props) => {\r\n    return (<form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name='newPost' validate={[maxLength10, required]}/>\r\n            </div>\r\n            <div>\r\n                <button>Addpost</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\nconst ReduxNewPostForm = reduxForm({form: 'addNewPost'})(newPostForm);\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log('myposts')\r\n    let postsElements = props.postsData.map(post => <Post message={post.message} likeCount={post.likes}/>);\r\n\r\n    let addNewPost = (data) => {\r\n        props.addPost(data.newPost);\r\n    };\r\n    return <div className={classes.postsBlock}>\r\n\r\n        <div>\r\n            <h2>My posts</h2>\r\n        </div>\r\n        <div>\r\n            <ReduxNewPostForm onSubmit={addNewPost}/>\r\n        </div>\r\n        <div className={classes.myPosts}>\r\n            {postsElements}\r\n        </div>\r\n    </div>\r\n});\r\n\r\nexport default MyPosts; ","import React from 'react';\r\nimport {addPostActionCreator} from \"../../Redux/ProfileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {reset} from 'redux-form';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (data) => {\r\n            dispatch(addPostActionCreator(data));\r\n            dispatch(reset('addNewPost'));\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./myPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from 'react-redux';\r\nimport {getUserProfileThunkCreator, getUserStatus, updateStatus} from \"../Redux/ProfileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {//6505; //хардкод на первое время\r\n            userId = this.props.userId\r\n            if(!userId){\r\n                this.props.history.push('/login')\r\n            };\r\n        }\r\n        ;\r\n        this.props.getUserProfileThunkCreator(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} /*profile={this.props.profile} status={this.props.status}*//>\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        userId: state.auth.id\r\n    }\r\n};\r\n/*let authRedirectComponent = withAuthRedirect(ProfileContainer);\r\nlet UrlDataContainer = withRouter(authRedirectComponent);               вид до применения compose\r\n\r\nexport default connect(mapStateToProps, {getUserProfileThunkCreator})(UrlDataContainer);*/\r\n\r\nexport default compose(connect(mapStateToProps, {\r\n    getUserProfileThunkCreator,\r\n    getUserStatus,\r\n    updateStatus\r\n}), withRouter/*, withAuthRedirect*/)\r\n(ProfileContainer);"],"sourceRoot":""}